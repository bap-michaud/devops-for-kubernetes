# HPA for web-app
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
  namespace: default
  labels:
    app: web-app
    component: frontend
  annotations:
    kubernetes.io/description: "Horizontal Pod Autoscaler for web-app based on CPU and memory"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app
  
  minReplicas: 3
  maxReplicas: 20
  
  metrics:
  # CPU utilization target
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  
  # Memory utilization target
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  
  # Custom metrics (requests per second)
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  
  # External metrics (queue length)
  - type: External
    external:
      metric:
        name: sqs_queue_length
        selector:
          matchLabels:
            queue: web-app-tasks
      target:
        type: Value
        value: "10"
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Percent
        value: 10  # Scale down by max 10% of current replicas
        periodSeconds: 60
      - type: Pods
        value: 2   # Scale down by max 2 pods
        periodSeconds: 60
      selectPolicy: Min  # Use the most conservative policy
    
    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute
      policies:
      - type: Percent
        value: 50  # Scale up by max 50% of current replicas
        periodSeconds: 60
      - type: Pods
        value: 4   # Scale up by max 4 pods
        periodSeconds: 60
      selectPolicy: Max  # Use the most aggressive policy

---
# HPA for api-service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-service-hpa
  namespace: default
  labels:
    app: api-service
    component: backend
  annotations:
    kubernetes.io/description: "Horizontal Pod Autoscaler for api-service with advanced metrics"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-service
  
  minReplicas: 3
  maxReplicas: 30
  
  metrics:
  # CPU utilization target
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  
  # Memory utilization target
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
  
  # Custom metrics (API response time)
  - type: Pods
    pods:
      metric:
        name: api_response_time_p95
      target:
        type: AverageValue
        averageValue: "500m"  # 500ms
  
  # Custom metrics (active connections)
  - type: Pods
    pods:
      metric:
        name: active_connections
      target:
        type: AverageValue
        averageValue: "100"
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # 10 minutes for backend stability
      policies:
      - type: Percent
        value: 15  # Scale down by max 15% of current replicas
        periodSeconds: 120
      - type: Pods
        value: 3   # Scale down by max 3 pods
        periodSeconds: 120
      selectPolicy: Min
    
    scaleUp:
      stabilizationWindowSeconds: 30   # 30 seconds for faster response
      policies:
      - type: Percent
        value: 100 # Scale up by max 100% of current replicas
        periodSeconds: 60
      - type: Pods
        value: 5   # Scale up by max 5 pods
        periodSeconds: 60
      selectPolicy: Max